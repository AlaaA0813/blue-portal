Armin Ronacher, "Flask for Fun and Profit" PyBay 2016

Armin Ronacher wrote flask.

Easy to monetize applications, not so much with libraries

Werkzeug

pocoo a replacement for phpbb in python

trac dealt with plugins.  wrpte low level code for apache or any web server itself
there wasnt a standard for talking between an application and its server

space transport layer
make the bare minimum to create an app - flask

flask has a small footprint - fast in returning things
easy to perform CRUD tasks

reasonable default tool to build micro services and web applications
------------------------
based on wsgi - not suitable for concurrent io things.
does not work well with high performance
------------------------
benefits of creating a function that runs the application
- can create more than one at a time with slightly different configurations
	- you can isolate the functions
- gives you the opportunity to reconfigure your application in a clean way
- use of blueprints - place functionality in a dummy object, and then reference the dummy object later when needed
------------------------
wrap the entire flask application in an object
------------------------
once we move an app into a function, how do we configure it?
- devapp.py
------------------------
flask.run will spawn a server and then load the application and then serve it up to you.  you never lose a connection with the application.
------------------------
def get_db():
	some code to get db

@app.teardown_appcontext
def close_connection(exception):
- looks for connections and if there is one, close it out.

def get_user():
	user = getattr(g, 'user', None)
	if user is None:
		user = load_user_from_request()
		g.user = user
	return user
------------------------
we can build APIs in flask
create an object called Api_result and stores the value that the API wants to generate

rv = return value
------------------------
so many ways to validate in python

make code aware of the context it's executed at
------------------------
a security module 

myapp.security
classProject(db.Model):
...

@property
------------------------
flask was created as a practical joke!
aprils fools joke

python dependency explicity written so developers can vendor it if needed

friend made a French developer impression.  dependencies were zipped into the last lione of the framework.

it became popular because people liked the idea of a micro framework.  
flask is a pun on another framework of a vessel that carries fluids.

the logo is not a chili pepper it is a horn
------------------------
websockets are becoming outdated
-keeps connection live from client to server and from server to client

HTP2?

